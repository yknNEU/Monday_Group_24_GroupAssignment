/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.admin;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Container;

import javax.swing.JOptionPane;

import model.Business.Business;
import model.Personnel.Person;
import model.Personnel.Profile;
import model.UserAccountManagement.UserAccount;

/**
 *
 * @author prasa
 */
public class ViewAccount extends javax.swing.JPanel {

    private Container ui;
    private Business business;
    private Person person;

    /**
     * Creates new form ViewAccount
     */
    public ViewAccount(Container ui, Business business, Person person) {
        this.ui = ui;
        this.business = business;
        this.person = person;
        initComponents();
        String role = person.getRole();
        if ("None".equals(role)) {
            cmbRole.setSelectedIndex(0);
            lblTitle.setText("Create Account");
            lblCreateAccountFor.setText("Create Account For: " + person.getPersonId());
            btnCreate.setText("Create");
        } else {
            cmbRole.setEnabled(false); // Role cannot be changed once set
            lblTitle.setText("Update Account");
            lblCreateAccountFor.setText("Update Account For: " + person.getPersonId());
            btnCreate.setText("Update");
            if ("Admin".equals(role)) {
                cmbRole.setSelectedIndex(1);
            } else if ("Marketing".equals(role)) {
                cmbRole.setSelectedIndex(2);
            } else if ("Sales".equals(role)) {
                cmbRole.setSelectedIndex(3);
            } else if ("Customer".equals(role)) {
                cmbRole.setSelectedIndex(4);
            } else {
                cmbRole.setSelectedIndex(0);
                System.out.println("[Error] Unrichable code executed [Class: ViewAccount, Method: Constructor]");
            }
            UserAccount userAccount = business.getUserAccountDirectory().findUserAccount(person.getPersonId());
            txtUsername.setText(userAccount.getUserName());
            // txtPassword.setText(userAccount.getPassword()); // Password should not be displayed for security reasons
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbRole = new javax.swing.JComboBox<>();
        lblRole = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtUsername = new javax.swing.JTextField();
        lblCreateAccountFor = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a role", "Admin", "Marketing", "Sales", "Customer" }));

        lblRole.setText("Role:");

        lblUsername.setText("Username:");

        lblPassword.setText("Password:");

        lblCreateAccountFor.setText("Create Account For: ");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Account");

        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(lblCreateAccountFor))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnCreate)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblPassword)
                                            .addComponent(lblUsername)
                                            .addComponent(lblRole))
                                        .addGap(80, 80, 80)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtUsername)
                                            .addComponent(cmbRole, 0, 119, Short.MAX_VALUE)
                                            .addComponent(txtPassword))))))
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(lblCreateAccountFor)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRole))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addGap(18, 18, 18)
                .addComponent(btnCreate)
                .addContainerGap(156, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        ui.remove(this);
        Component[] componentArray = ui.getComponents();
        Component component = componentArray[componentArray.length - 1];
        if (component instanceof ViewPerson) {
            ViewPerson viewPerson = (ViewPerson) component;
            viewPerson.setRole(person.getRole());
        }
        CardLayout cardLayout = (CardLayout) ui.getLayout();
        cardLayout.previous(ui);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if ("Select a role".equals(cmbRole.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Please select a role", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input your username.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please set a password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String role = person.getRole();
        if ("None".equals(role)) {
            // Person don't have an account yet, create one
            if (business.getUserAccountDirectory().getUserAccount(txtUsername.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Username already exists.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if ("Admin".equals(cmbRole.getSelectedItem().toString())) {
                Profile profile = business.getEmployeeDirectory().newEmployeeProfile(person);
                business.getUserAccountDirectory().newUserAccount(profile, txtUsername.getText(), txtPassword.getText());
                JOptionPane.showMessageDialog(this, "Admin account created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                btnCreate.setText("Update");
                cmbRole.setEnabled(false);
            } else if ("Marketing".equals(cmbRole.getSelectedItem().toString())) {
                Profile profile = business.getMarketingPersonDirectory().newMarketingPersonProfile(person);
                business.getUserAccountDirectory().newUserAccount(profile, txtUsername.getText(), txtPassword.getText());
                JOptionPane.showMessageDialog(this, "Marketing account created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                btnCreate.setText("Update");
                cmbRole.setEnabled(false);
            } else if ("Sales".equals(cmbRole.getSelectedItem().toString())) {
                Profile profile = business.getSalesPersonDirectory().newSalesPersonProfile(person);
                business.getUserAccountDirectory().newUserAccount(profile, txtUsername.getText(), txtPassword.getText());
                JOptionPane.showMessageDialog(this, "Sales account created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                btnCreate.setText("Update");
                cmbRole.setEnabled(false);
            } else if ("Customer".equals(cmbRole.getSelectedItem().toString())) {
                Profile profile = business.getCustomerDirectory().newCustomerProfile(person);
                business.getUserAccountDirectory().newUserAccount(profile, txtUsername.getText(), txtPassword.getText());
                JOptionPane.showMessageDialog(this, "Customer account created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                btnCreate.setText("Update");
                cmbRole.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(this, "Unrichable code.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("[Error] Unrichable code executed [Class: ViewAccount, Method: btnCreateActionPerformed]");
            }
        } else {
            // Person already have an account, modify it
            UserAccount userAccount = business.getUserAccountDirectory().findUserAccount(person.getPersonId());
            if (business.getUserAccountDirectory().getUserAccount(txtUsername.getText()) != null && !userAccount.getUserName().equals(txtUsername.getText())) {
                JOptionPane.showMessageDialog(this, "Username already exists.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            userAccount.setUserName(txtUsername.getText());
            userAccount.setPassword(txtPassword.getText());
            JOptionPane.showMessageDialog(this, "Account updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JLabel lblCreateAccountFor;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
