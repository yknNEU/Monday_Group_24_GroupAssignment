/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.sales;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Container;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import model.Business.Business;
import model.UserAccountManagement.UserAccount;

/**
 *
 * @author prasa
 */
public class SearchProduct extends javax.swing.JPanel {

    private Container ui;
    private Business business;
    private UserAccount userAccount;

    /**
     * Creates new form SearchProduct
     */
    public SearchProduct(Container ui, Business business, UserAccount userAccount) {
        this.ui = ui;
        this.business = business;
        this.userAccount = userAccount;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtProductName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblProductName = new javax.swing.JLabel();
        lblBetween = new javax.swing.JLabel();
        txtLow = new javax.swing.JTextField();
        txtHigh = new javax.swing.JTextField();
        lblTo = new javax.swing.JLabel();
        lblAvail = new javax.swing.JLabel();
        lblSupplierName = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        lblTo1 = new javax.swing.JLabel();
        txtLow1 = new javax.swing.JTextField();
        txtHigh1 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 204));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Search for Product");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblProductName.setText("Product Name:");

        lblBetween.setText("Price between:");

        lblTo.setText("~");

        lblAvail.setText("Availability between:");

        lblSupplierName.setText("Supplier Name:");

        lblStatus.setText("Status");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "On Sale", "Sold Out", "Off Sale" }));

        lblTo1.setText("~");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnBack))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(186, 186, 186)
                                    .addComponent(lblBetween))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(153, 153, 153)
                                    .addComponent(lblAvail)
                                    .addGap(310, 310, 310))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(180, 180, 180)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnSearch)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblProductName)
                                                .addGap(70, 70, 70)
                                                .addComponent(txtProductName))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblSupplierName)
                                                .addGap(66, 66, 66)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(txtLow, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(lblTo)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jTextField2)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(txtLow1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(lblTo1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtHigh1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblStatus)
                                                .addGap(66, 66, 66)
                                                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 97, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSupplierName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTo)
                        .addComponent(lblBetween)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHigh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTo1))
                    .addComponent(lblAvail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(btnSearch)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Read data from the table in the previous panel
        Component[] components = ui.getComponents();
        Component component = components[components.length - 2];
        DefaultTableModel model = null;
        if (component instanceof ManageProduct) {
            ManageProduct manageProduct = (ManageProduct) component;
            model = (DefaultTableModel) manageProduct.getTable().getModel();
        } else {
            JOptionPane.showMessageDialog(this, "Unexpected panel detected, unable to show the search result.", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("[Warning] Unexpected panel detected, unable to show the search result. [Class: SearchProduct, Method: btnSearchActionPerformed]");
            return;
        }
        // Prase search criteria
        String productNameKeyword = txtProductName.getText();
        String supplierNameKeyword = jTextField2.getText();
        int minPrice = -1;
        int maxPrice = -1;
        int minAvailability = -1;
        int maxAvailability = -1;
        String selectedStatus = cmbStatus.getSelectedItem().toString();

        try {
            if (!txtLow.getText().isEmpty()) {
                minPrice = Integer.parseInt(txtLow.getText());
            }
            if (!txtHigh.getText().isEmpty()) {
                maxPrice = Integer.parseInt(txtHigh.getText());
            }
            if (!txtLow1.getText().isEmpty()) {
                minAvailability = Integer.parseInt(txtLow1.getText());
            }
            if (!txtHigh1.getText().isEmpty()) {
                maxAvailability = Integer.parseInt(txtHigh1.getText());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for price and availability.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((minPrice < 0 && !txtLow.getText().isEmpty()) || (maxPrice < 0 && !txtHigh.getText().isEmpty())) {
            JOptionPane.showMessageDialog(this, "Price must be positive numbers.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ((minAvailability < 0 && !txtLow1.getText().isEmpty()) || (maxAvailability < 0 && !txtHigh1.getText().isEmpty())) {
            JOptionPane.showMessageDialog(this, "Availability must be positive numbers.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (minPrice > maxPrice && maxPrice != -1 && minPrice != -1) {
            JOptionPane.showMessageDialog(this, "Minimum price cannot be greater than maximum price.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (minAvailability > maxAvailability && maxAvailability != -1 && minAvailability != -1) {
            JOptionPane.showMessageDialog(this, "Minimum availability cannot be greater than maximum availability.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Remove rows that do not match the search criteria
        try {
            for (int i = 0; i < model.getRowCount(); i++) {
                String productName = model.getValueAt(i, 0).toString();
                String supplierName = model.getValueAt(i, 1).toString();
                int price = Integer.parseInt(model.getValueAt(i, 2).toString());
                int availability = Integer.parseInt(model.getValueAt(i, 3).toString());
                String status = model.getValueAt(i, 4).toString();
                
                if (!productNameKeyword.isEmpty() && !productName.toLowerCase().contains(productNameKeyword.toLowerCase())) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (!supplierNameKeyword.isEmpty() && !supplierName.toLowerCase().contains(supplierNameKeyword.toLowerCase())) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (minPrice != -1 && price < minPrice) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (maxPrice != -1 && price > maxPrice) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (minAvailability != -1 && availability < minAvailability) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (maxAvailability != -1 && availability > maxAvailability) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
                if (!selectedStatus.equals(status)) {
                    model.removeRow(i);
                    i--;
                    continue;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unable to read data from the table. Search failed.", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println("[Warning] Unable to read data from the table. Search failed. [Class: SearchProduct, Method: btnSearchActionPerformed]");
        }
        ui.remove(this);
        CardLayout cardLayout = (CardLayout) ui.getLayout();
        cardLayout.previous(ui);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        ui.remove(this);
        CardLayout cardLayout = (CardLayout) ui.getLayout();
        cardLayout.previous(ui);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblBetween;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSupplierName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTo;
    private javax.swing.JLabel lblTo1;
    private javax.swing.JTextField txtHigh;
    private javax.swing.JTextField txtHigh1;
    private javax.swing.JTextField txtLow;
    private javax.swing.JTextField txtLow1;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables
}
